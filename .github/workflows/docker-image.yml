name: Docker Image CI

permissions:
  packages: write
  contents: read
  id-token: write

on:
  pull_request_target:
    types:
      - closed
    branches:
      - 'main'

jobs:
  push_to_registry:
    if: github.event.pull_request.merged == true
    env:
      REGISTRY: public.ecr.aws
      REGISTRY_ALIAS: k1e9q4w8
      IMAGE_TAG: latest
      REGION: us-east-1
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      ##################################################
      ################## ECR PUBLIC ####################
      ##################################################
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::260778392212:role/admin
          aws-region: us-east-1
          
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      ###############################
      ######   Docker Image:  #######
      ######      RUBY        #######

      ###############################
      - name: Build, tag, and push docker image to Amazon ECR Public - Ruby
        if: contains(github.event.pull_request.labels.*.name, 'lang/ruby')
        env:
          REPOSITORY: ruby
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      #################################
      ######   Docker Image:    #######
      ######      PYTHON        #######
      #################################
      - name: Build, tag, and push docker image to Amazon ECR Public - Python
        if: contains(github.event.pull_request.labels.*.name, 'lang/python')
        env:
          REPOSITORY: python
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      #################################
      #######  Docker Image:   ########
      #######   JAVASCRIPT     ########
      #################################
      - name: Build, tag, and push docker image to Amazon ECR Public - JavaScript
        if: contains(github.event.pull_request.labels.*.name, 'lang/javascript-v3')
        env:
          REPOSITORY: javascriptv3
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      ################################
      #######  Docker Image:   #######
      #######      RUST        #######
      # public.ecr.aws/k1e9q4w8/rust #
      ################################
      - name: Build, tag, and push docker image to Amazon ECR Public - Rust
        if: contains(github.event.pull_request.labels.*.name, 'lang/rust')
        env:
          REPOSITORY: rust_dev_preview
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      #################################
      #######  Docker Image:   ########
      #######       GO         ########
      # public.ecr.aws/k1e9q4w8/gov2  #
      #################################
      - name: Build, tag, and push docker image to Amazon ECR Public - GoLang
        if: contains(github.event.pull_request.labels.*.name, 'lang/go-v2')
        env:
          REPOSITORY: gov2
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      ##################################
      ########  Docker Image:   ########
      #########      C++         #######
      ##  public.ecr.aws/k1e9q4w8/cpp ##
      ##################################
      - name: Build, tag, and push docker image to Amazon ECR Public - C++
        if: contains(github.event.pull_request.labels.*.name, 'lang/cpp')
        env:
          REPOSITORY: cpp
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      ####################################
      #######  Docker Image:   ###########
      #######     .NET v3      ###########
      # public.ecr.aws/k1e9q4w8/dotnetv3 #
      ####################################
      - name: Build, tag, and push docker image to Amazon ECR Public - .NET v3
        if: contains(github.event.pull_request.labels.*.name, 'lang/dotnet-v3')
        env:
          REPOSITORY: dotnetv3
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      ##################################
      #######  Docker Image:   #########
      #######      JAVA       ##########
      # public.ecr.aws/k1e9q4w8/javav2 #
      ##################################
      - name: Build, tag, and push docker image to Amazon ECR Public - JavaV2
        if: contains(github.event.pull_request.labels.*.name, 'lang/java-v2')
        env:
          REPOSITORY: javav2
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      ##################################
      #######  Docker Image:   #########
      #######      KOTLIN      #########
      # public.ecr.aws/k1e9q4w8/kotlin #
      ##################################
      - name: Build, tag, and push docker image to Amazon ECR Public - Kotlin
        if: contains(github.event.pull_request.labels.*.name, 'lang/kotlin')
        env:
          REPOSITORY: kotlin
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

      ##################################
      #######  Docker Image:   #########
      #######      PHP         #########
      ##  public.ecr.aws/k1e9q4w8/php ##
      ##################################
      - name: Build, tag, and push docker image to Amazon ECR Public - PHP
        if: contains(github.event.pull_request.labels.*.name, 'lang/php')
        env:
          REPOSITORY: php
        run: |
          aws ecr-public get-login-password --region $REGION | docker login --username AWS --password-stdin $REGISTRY/$REGISTRY_ALIAS
          docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

                

